a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
View(a)
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
a<-getWord(graph,"artifact")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"artifact")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
View(a)
a<-getWord(graph,"artifact")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"artifact")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"artifact")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
source('~/GitHub/RWordNetNeo4j/getWord.R')
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"artifact")
View(a)
a<-getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
?is.null
is.null(NULL)
!is.null(NULL)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
a<-getWord(graph,"artifact")
View(a)
a<-getWord(graph,"hound")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"hound")
View(a)
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"potato")
View(a)
a<-getWord(graph,"artifact")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"artifact")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWord(graph,"artifact")
View(a)
a<-getWord(graph,"potato")
View(a)
source('~/GitHub/RWordNetNeo4j/getWord.R')
source('~/GitHub/RWordNetNeo4j/getWord.R')
source('~/GitHub/RWordNetNeo4j/downloadWordNetFiles.R')
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
downloadWordNetFiles()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
downloadAndCreateWordNetGraph()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
downloadAndCreateWordNetGraph()
dictPath = paste(getwd(),"dict",sep="/")
verbose=TRUE
wordNetData <- readPOSdata(dictPath, verbose);
wordFrame<- readPOSWordIndex(dictPath, verbose=verbose)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
a<-wordNetData$verb
View(a)
synsetData<-a
z<-apply(synsetData[synsetData$pCnt>0,], 1, transformSynsetDataToSynPointerMap)
z<-ldply(z);
View(z)
y<-cbind(z, pointerType = translateMultiPointerSymbols(z$pointerSymbol, z$startPOS), stringsAsFactors = FALSE);
View(y)
synsetData<-wordNetData$noun
z<-apply(synsetData[synsetData$pCnt>0,], 1, transformSynsetDataToSynPointerMap)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
z<-ldply(z);
y<-cbind(z, pointerType = translateMultiPointerSymbols(z$pointerSymbol, z$startPOS), stringsAsFactors = FALSE);
View(z)
x<-pointerType = translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
?nrow
?nrow(z$pointerSymbol)
?nrow(z$pointerSymbol)
nrow(z$pointerSymbol)
length(z$pointerSymbol)
length(z$startPOS)
pointerType = translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerType <- translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerType <- translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerType <- translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerType <- translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerType <- translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerType <- translateMultiPointerSymbols(z$pointerSymbol, z$startPOS)
pointerType$1
pointerType[1]
pointerType[[1]]
pointerType[[2]]
input <- data.frame(symbol = z$pointerSymbol, pos = z$startPOS, stringsAsFactors = FALSE);
?is.character()
input[is.character(input$symbol)==FALSE,]
input[is.character(input$posl)==FALSE,]
input[is.character(input$pos)==FALSE,]
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
?unlist
x[1]
is.null(x)
x[269711]
x[269710]
x[269709]
lappy(x,function(y){if(is.null(y)){print("Found")}})
lapply(x,function(y){if(is.null(y)){print("Found")}})
w<-lapply(x,function(y){if(is.null(y)){print("Found")}})
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
?seq_along
w<-lapply(seq_along(x),function(y){if(is.null(x[[y]])){print(y)}})
w<-lapply(seq_along(x),function(y){if(is.null(x[y])){print(y)}})
w<-lapply(seq_along(x),function(y){if(is.null(x[y])){print("FOUND")}})
w<-lapply(seq_along(x),function(y){if(is.null(x[[y]])){print("FOUND")}})
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
View(wordFrame)
View(z)
z[z$pointerSymbol=="\\"&z$startPOS=="n"]
z[z$pointerSymbol=="\\"&z$startPOS=="n",]
synsetData[synsetData$synsetOffset=="107569690",]
synsetData[synsetData$synsetOffset=="07569690",]
z<-apply(synsetData[synsetData$pCnt>0,], 1, transformSynsetDataToSynPointerMap)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
z<-apply(synsetData[synsetData$pCnt>0,], 1, transformSynsetDataToSynPointerMap)
z<-ldply(z);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
x<-translateMultiPointerSymbols(z$pointerSymbol, z$startPOS) #Why is this missing 3 records?
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
z<-apply(synsetData[synsetData$pCnt>0,], 1, transformSynsetDataToSynPointerMap)
z<-ldply(z);
View(z)
View(z)
z[z$pointerSymbol=="\\"&z$startPOS=="n"]
z[z$startId=="107569690",]
x<-translateMultiPointerSymbols(z$pointerSymbol, z$endPOS) #Why is this missing 3 records?
y<-cbind(z, pointerType = translateMultiPointerSymbols(z$pointerSymbol, z$startPOS), stringsAsFactors = FALSE);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
y<-cbind(z, pointerType = translateMultiPointerSymbols(z$pointerSymbol, z$endPOS), stringsAsFactors = FALSE);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
View(synsetData)
synsetData[3,]
synsetData[3,"words"]
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
?strsplit
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
?strsplit
convertWordsToCommaDelimitedList(synsetData[3,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[3,"words"])
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
?paste
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
convertWordsToCommaDelimitedList(synsetData[17,"words"])
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
downloadAndCreateWordNetGraph()
downloadAndCreateWordNetGraph()
dictPath = paste(getwd(),"dict",sep="/")
verbose=TRUE
wordNetData <- readPOSdata(dictPath, verbose);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
a<-wordNetData$adj
View(a)
synsetData<-a
z<-apply(synsetData[synsetData$pCnt>0,], 1, transformSynsetDataToSynPointerMap)
z<-ldply(z);
View(z)
z2<-z[z$pointerSymbol=="\\",]
View(z2)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
downloadAndCreateWordNetGraph()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
dictPath="./testData"
verbose=TRUE
wordNetData <- readPOSdata(dictPath, verbose);
dictPath = paste(getwd(),"dict",sep="/")
wordNetData <- readPOSdata(dictPath, verbose);
dictPath2="./testData"
wordNetData <- readPOSdata(dictPath, verbose);
wordNetData <- readPOSdata(dictPath2, verbose);
wordFrame<- readPOSWordIndex(dictPath, verbose=verbose)
createWordNetGraph(dictpath="./newTestData")
createWordNetGraph(dictPath="./newTestData")
pwd()
getwd()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createWordNetGraph(dictPath="./newTestData")
createWordNetGraph(dictPath="./newTestData")
createWordNetGraph(dictPath="./newTestData")
dictPath<-dictPath2
verbose=TRUE
username="neo4j"
password="graph"
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
graph<-newGraph(username=username, password=password);
createLexNodes(graph, dictPath, verbose=verbose);
createFrameNodes(graph, verbose=verbose);
wordNetData <- readPOSdata(dictPath, verbose);
createSynsetNodes(graph, wordNetData, verbose=verbose);
wordFrame<- readPOSWordIndex(dictPath, verbose=verbose)
dictPath2<-"./newTestData"
graph<-newGraph(username=username, password=password);
#Create nodes representing the 45 lexicographer file names
createLexNodes(graph, dictPath, verbose=verbose);
#Create nodes representing the 35 verb frames
createFrameNodes(graph, verbose=verbose);
wordNetData <- readPOSdata(dictPath, verbose);
createSynsetNodes(graph, wordNetData, verbose=verbose);
wordFrame<- readPOSWordIndex(dictPath, verbose=verbose)
dictPath<-dictPath2
graph<-newGraph(username=username, password=password);
#Create nodes representing the 45 lexicographer file names
createLexNodes(graph, dictPath, verbose=verbose);
#Create nodes representing the 35 verb frames
createFrameNodes(graph, verbose=verbose);
#Create synsets
wordNetData <- readPOSdata(dictPath, verbose);
createSynsetNodes(graph, wordNetData, verbose=verbose);
wordFrame<- readPOSWordIndex(dictPath, verbose=verbose)
View(wordFrame)
createWordNodes(graph, wordFrame, verbose=verbose);
pointerFrame <- ldply(lapply(wordNetData, getSynsetPointerFrame));
createSemanticPointers(graph, pointerFrame[pointerFrame$startWordNum==0,], verbose=verbose);
wordFrame <- ldply(lapply(wordNetData, getWordFrame));
View(pointerFrame)
View(wordFrame)
pointerFrame <- getLexicalPointerWords(pointerFrame[pointerFrame$startWordNum!=0,], wordFrame);
View(pointerFrame)
createLexicalPointers(graph, pointerFrame, verbose=verbose);
View(pointerFrame)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexicalPointers(graph, pointerFrame, verbose=verbose);
verbFrameFrame<- ldply(apply(wordNetData$verb,1,transformSynsetDataToFrameMap));
createVerbFrameRelationships(graph, verbFrameFrame, verbose=verbose);
createWordNetGraph(dictPath=dictPath)
runIntegrationTests()
unitTest("Synset node count", countNodesbyLabel(graph, "Synset"),128);
unitTest("Synset node count", countNodesbyLabel(graph, "Synset"),127);
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
install.packages("testthat")
library(testthat);
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
downloadAndCreateWordNetGraph()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
downloadAndCreateWordNetGraph()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
runIntegrationTests()
downloadAndCreateWordNetGraph()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
getWord(graph,"potato")
source('~/GitHub/RWordNetNeo4j/getWord.R')
getWord(graph,"potato")
username="neo4j"
password="graph"
graph <- startGraph(url, username, password);
url="http://localhost:7474/db/data/"
graph <- startGraph(url, username, password);
getWord(graph,"potato")
a<-getWord(graph,"potato")
View(a)
a<-getWord(graph,"rotten")
a<-getWord(graph,"blight")
a<-getWord(graph,"umbrella")
source('~/GitHub/RWordNetNeo4j/getWord.R')
a<-getWordInfo(graph,"umbrella")
View(a)
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
source('~/GitHub/RWordNetNeo4j/getWord.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/downloadAndCreateNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/downloadAndCreateNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createWordNodes.R')
source('~/GitHub/RWordNetNeo4j/downloadWordNetFiles.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/downloadAndCreateNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
source('~/GitHub/RWordNetNeo4j/getWordInfo.R')
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
source('~/GitHub/RWordNetNeo4j/downloadWordNetFiles.R')
source('~/GitHub/RWordNetNeo4j/createWordNodes.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/downloadAndCreateNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/downloadAndCreateNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/testFunctions.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
runIntegrationTests()
dictPath="./newTestData"
graph<-createNeoWordNet(dictPath=dictPath)
a<-getWordInfo(graph, "geko")
a<-getWordInfo(graph, "gecko")
a<-getWordInfo(graph, "scarce")
a<-getWordInfo(graph, "whoop")
View(a)
source('~/GitHub/RWordNetNeo4j/createNeoWordNet.R')
