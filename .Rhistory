chosenFeatures<-getOptionNodeDifference(graph, choice, nonChoice);
chosenFeatures<-getOptionNodeDifference(choice, nonChoice);
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
assignMultipleFeaturePreferencesToSession(graph, session, chosenFeatures, 1);
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
assignMultipleFeaturePreferencesToSession(graph, session, chosenFeatures, 1);
session
nonChosenFeatures<-getOptionNodeDifference(nonChoice, choice);
assignMultipleFeaturePreferencesToSession(graph, session, nonChosenFeatures, -1)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
assignMultipleFeaturePreferencesToSession(graph, session, nonChosenFeatures, -1)
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
doesValidSolutionExistBasic(2)
doesValidSolutionExistBasic(10)
doesValidSolutionExistBasic(2)
doesValidSolutionExistBasic(2)
doesValidSolutionExistBasic(10)
a<-doesValidSolutionExistBasic(10)
a<-TRUE
doesValidSolutionExistBasic(10)
doesValidSolutionExistBasic(10)
doesValidSolutionExistBasic(10)
source('~/GitHub/choiceEngineR/solutionCheck.R')
doesValidSolutionExistBasic(10)
source('~/GitHub/choiceEngineR/solutionCheck.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
1
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
top <- getTopOptionInfo(graph, 2, 10)
top <- getTopOptionInfo(graph, session, 10)
top$optionId
getOptionNodeById(graph, topOptions$optionId[[1]]
getOptionNodeById(graph, topOptions$optionId[[1]]
getOptionNodeById(graph, topOptions$optionId[[1]])
getOptionNodeById(graph, top$optionId[[1]])
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/solutionCheck.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/solutionCheck.R')
testRun(graph)
source('~/GitHub/choiceEngineR/solutionCheck.R')
testRun(graph)
source('~/GitHub/choiceEngineR/solutionCheck.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
source('~/GitHub/choiceEngineR/test_run.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/solutionCheck.R')
testRun(graph)
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/choiceEngineR/queryChoiceGraph.R')
testRun(graph)
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
setwd('~/GitHub/RWordNetNeo4j')
getwd()
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
?df
A <- data.frame(c(1,2,3),c(4,5,6),c(7,8,9))
View(A)
A <- data.frame(START_NODE_ID=c(1,2,3),REL_ID=c(4,5,6),END_NODE_ID=c(7,8,9))
View(A)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
bulkGraphUpdate(graph, A, createExampleNodes)
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
bulkGraphUpdate(graph, A, createExampleNodes)
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
bulkGraphUpdate(graph, A, createExampleNodes)
source('~/GitHub/RWordNetNeo4j/genericGraphFunctions.R')
bulkGraphUpdate(graph, A, createExampleNodes)
clear(graph)
bulkGraphUpdate(graph, A, createExampleNodes)
View(A)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
?clear
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
dict <- "~/Downloads/WordNet-3.0/dict/";
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
paste(dictPath,"lexnames", sep="/");
?read.file
?read.csv
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), sep="\t");
View(lexData)
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), sep="\t",
col.names=c("fileNumber","fileName","synCat"),
stringsAsFactors=FALSE);
source('~/.active-rstudio-document', echo=TRUE)
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), sep="\t", col.names=c("fileNumber","fileName","synCat"),stringsAsFactors=FALSE);
View(lexData)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexData<-read.table(paste(dictPath,"lexnames", sep="/"),
sep="\t", col.names=c("fileNumber","fileName","synCat"),stringsAsFactors=FALSE);
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), +
sep="\t", col.names=c("fileNumber","fileName","synCat"),stringsAsFactors=FALSE);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
?gsub
lexData$synCat <- gsub("1","Noun",lexData$synCat);
View(lexData)
lexData$synCat <- gsub("1","Noun",lexData$synCat);
lexData$synCat <- gsub("1","Noun",lexData$synCat);
lexData$synCat <- gsub("2","Verb",lexData$synCat);
lexData$synCat <- gsub("3","Adjective",lexData$synCat);
lexData$synCat <- gsub("4","Adverb",lexData$synCat);
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), sep="\t", col.names=c("fileNumber","fileName","synCat"),stringsAsFactors=FALSE);
lexData$synCat <- gsub("1","Noun",lexData$synCat);
lexData$synCat <- gsub("2","Verb",lexData$synCat);
lexData$synCat <- gsub("3","Adjective",lexData$synCat);
lexData$synCat <- gsub("4","Adverb",lexData$synCat);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexHTML <- getHTML("http://wordnet.princeton.edu/wordnet/man/lexnames.5WN.html");
?rvest
lexDesc <- lexHTML %>%
html_nodes("table") %>%
html_table();
lexDesc <- lexHTML %>% html_nodes("table") %>% html_table();
?html_table
lexDesc <- lexHTML %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE);
lexDesc <- [[lexHTML %>% html_nodes("table") %>% html_table()]];
lexDesc <- unlist(lexHTML %>% html_nodes("table") %>% html_table());
lexDesc <- unlist(lexHTML %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE));
lexDesc
lexDesc <- lexHTML %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE);
lexDesc
lexDesc$Contents
lexDesc$Contents[[1]]
lexDesc$Contents[1]
lexDesc$data.frame
lexDesc["data.frame"]
lexDesc
lexDesc[1]
lexDesc[[1]]
a<-lexDesc[[1]]
b<-data.frame(lexDesc)
b
View(b)
View(a)
lexDesc <- lexHTML %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE) %>% data.frame();
lexDesc$Contents
lexDesc<-lexDesc$Contents
lexDesc<-lexDesc$Contents[2:46];
lexDesc<-lexDesc$Contents
lexDesc <- lexHTML %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE) %>% data.frame();
lexDesc<-lexDesc$Contents[2:45]
lexDesc <- lexHTML %>% html_nodes("table") %>% html_table(header=TRUE, fill=TRUE) %>% data.frame();
lexDesc<-lexDesc$Contents[2:length(lexDesc$Contents)];
lexDesc
lexDesc <- gsub("\n","",lexDesc);
lexDesc
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
?capitalize
?capitalize
?upcase
?upper
capitalize("a")
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
library(R.utils)
?capitalize
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexNames<-getLexNames(dictPath)
View(lexNames)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
lexData<- getLexNames(dictPath);
print(lexData);
bulkGraphUpdate(graph, lexData, createLexNodes);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
print("start");
lexData <- getLexNames(dictPath);
print(lexData);
bulkGraphUpdate(graph, lexData, createLexNodes);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph,dictPath)
print("start");
lexData <- getLexNames(dictPath);
print(lexData);
bulkGraphUpdate(graph, lexData, createLexNodes);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
print("start");
lexData <- getLexNames(dictPath);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), sep="\t", col.names=c("fileNumber","fileName","synCat"),stringsAsFactors=FALSE);
lexData$synCat <- updateSynCat(lexData$synCat);
lexData$synCat <- updateSynCat(lexData$synCat);
print("1");
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
lexData<-read.table(paste(dictPath,"lexnames", sep="/"), sep="\t", col.names=c("fileNumber","fileName","synCat"),stringsAsFactors=FALSE);
lexData$synCat <- updateSynCat(lexData$synCat);
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph, dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
createLexNodes(graph, dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
clear(graph)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph, dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
graph(clear)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
graph(clear)
clear(graph)
createLexNodes(graph, dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
createLexNodes(graph, dictPath)
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
clear(graph)
createLexNodes()
getwd()
verbIndex <- read.table("index.verb")
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb")
?read.csv
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", skip=29, stringsAsFactors=FALSE)
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", skip=30, stringsAsFactors=FALSE)
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", sep=" ", skip=30, stringsAsFactors=FALSE)
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb")
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", sep=" ")
?scan
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=30)
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=29)
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=29, nlines=50)
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=29, nlines=50, sep="\n")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=28, nlines=50, sep="\n")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=28, nlines=50, sep="")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", skip=29, nlines=50, sep="")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=character, skip=29, nlines=50, sep="")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=character(), skip=29, nlines=50, sep="")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=character(), skip=29, nlines=50, sep=" ")
?read.table
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", what=character(), skip=29, nlines=50, sep=" ")
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", colClasses=character(), skip=29, sep=" ")
verbIndex <- read.table("~/Downloads/WordNet-3.0/dict/index.verb", skip=29, sep=" ")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=character(), skip=29, nlines=50, sep=" ")
?scan
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=character(), skip=29, nlines=50, sep=" ", flush = TRUE, multi.line=FALSE)
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=character(), skip=29, nlines=50, sep=" ")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what=""", skip=29, nlines=50, sep=" ")
verbIndex <- scan("~/Downloads/WordNet-3.0/dict/index.verb", what="", skip=29, nlines=50, sep=" ")
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
?readLines
verbIndex <- readLines("~/Downloads/WordNet-3.0/dict/index.verb")
verbIndex[1]
verbIndex[10]
verbIndex[30]
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
verbIndex <- verbIndex[30:length(verbIndex)];
verbIndex <- readLines(path);
verbIndex <- verbIndex[29:length(verbIndex)];
path="~/Downloads/WordNet-3.0/dict/index.verb"
verbIndex <- readLines(path);
verbIndex <- verbIndex[29:length(verbIndex)];
verbIndex <- readLines(path);
verbIndex <- verbIndex[29:length(verbIndex)];
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
verbIndex <- verbIndex[30:length(verbIndex)];
verbIndex[1]
verbIndex[2]
verbIndex <- readLines(path);
verbIndex[2]
verbIndex[29]
verbIndex[30]
verbIndex <- verbIndex[30:length(verbIndex)];
verbIndex[2]
verbIndex[1]
?lapply
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a <- lapply(verbIndex, function(x){
x;
});
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a <- lapply(verbIndex, function(x){
x
});
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a <- sapply(verbIndex, function(x){
x
});
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a <- lapply(verbIndex, function(x){
print(x);
});
a <- lapply(verbIndex, function(x){ print(x);})
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a <- lapply(verbIndex, function(x){ x;})
a[1]
a[[1]]
?split
b<- a[[1]]
b
split(b)
?paste
?split
strsplit(b," ")
b<-a[[3]]
b
strsplit(b," ")
path="~/Downloads/WordNet-3.0/dict/data.verb"
verbData <- readLines(path);
verbData[5]
verbData[1]
verbData[10]
verbData[30]
verbData[29]
verbData[30]
verbData <- verbIndex[30:length(verbData)];
verbData[2]
verbData[10]
verbData[1]
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
verbData <- readLines(path);
verbData <- verbData[30:length(verbData)];
verbData[1]
verbData[2]
verbData[10]
verbData[3]
verbData[2]
verbData[4]
verbData[10]
verbData[11]
verbData[12]
a <- lapply(verbData, function(x){ x;})
a <- lapply(verbData, function(x){
x;
})
a <- lapply(verbData, function(x){ x; })
a <- lapply(verbData, function(x){ x })
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a <- lapply(verbData, function(x){ x });
a <- lapply(verbData, function(x){
x
});
a <- lapply(verbData, function(x){
x <-1
});
a <- lapply(verbData, function(x){
x <-1;
});
a <- lapply(verbData, function(x){
x<-1;
});
a <- lapply(verbData, function(x){
x<-1;
});
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a<-readVerbDataFile()
?list
splitstr(b)
?split
strsplit(b)
strsplit(b, " ")
t<-strsplit(b, " ")
t
t[1]
t[1][1]
t[[1]]
t[1]
t[1][2]
t[1][1]
t[[1]][1]
?switch
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
a<-readVerbDataFile()
a[2]
a[2]$offset
a[[2]]$offset
a[[2]]$pos
verbData[1]
verbData[10]
t
verbData[10]
t<-verbData[10]
t<-trsplit(t, " ");
t<-strsplit(t, " ");
t
t
t[[1]][3]
t[[1]][4]
to.integer(t[[1]][4])
to.int(t[[1]][4])
as.int(t[[1]][4])
as.integer(t[[1]][4])
t
t[[1]][5]
t[[1]][5:6]
t[[1]][5:7]
t[[1]][5:8]
wordCount<-2
t[[1]][5:wordCount]
t[[1]][5:{wordCount}]
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
source('~/GitHub/RWordNetNeo4j/createWordNetNeo4j.R')
